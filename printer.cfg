# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though the atmega1280 is also possible).

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: !PE5
#endstop_pin: ^PE4
position_endstop: 0
position_max: 225
position_min: -3
homing_speed: 40

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: !PJ1
#endstop_pin: ^PJ0
position_endstop: 0
position_max: 210
position_min: -3
homing_speed: 40

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 0.8
endstop_pin: !PD3
#endstop_pin: ^PD2
position_endstop: 0.15
position_max: 191
position_min: -3

[extruder]
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
microsteps: 16
#rotation_distance: 33.500
rotation_distance: 20.5
#rotation_distance: 15.5
gear_ratio: 43:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
control: pid
pid_Kp: 19.587
pid_Ki: 0.684
pid_Kd: 140.293
min_temp: 0
max_temp: 285
max_extrude_only_distance: 100.0
#max_extrude_only_accel: 40.00

# Normal Nunus
pressure_advance = 0.1

# Verbatim PLA
#pressure_advance = 0.61

[bed_screws]
screw1: 6.60,0
screw2: 217.50,0
screw3: 217.50,206
screw4: 6.6,206

#[extruder1]
#step_pin: PC1
#dir_pin: PC3
#enable_pin: !PC7
#heater_pin: PH6
#sensor_pin: PK7
#...

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: pid
#pid_Kp: 202.50
#pid_Ki: 17.02
#pid_Kd: 602.19
min_temp: 5
max_temp: 130
max_power: 1.0

[idle_timeout]
#gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 1800

[verify_heater extruder]
heating_gain: 2
check_gain_time:35
hysteresis: 16
max_error: 130

[verify_heater heater_bed]  
heating_gain: 0.1 
check_gain_time:240  
hysteresis: 16  
max_error: 130 

[bed_mesh]
speed: 120
horizontal_move_z: 0.3
mesh_min: 0,0
mesh_max: 220, 200
probe_count: 5,3

[fan]
pin: PH6

[mcu]
serial: /dev/bus/usb/001/003
baud: 250000
#serial: /dev/ttyACM0

[printer]
kinematics: cartesian
max_velocity: 300
#max_accel: 7000
max_accel: 1500
max_accel_to_decel: 1500
#max_accel_to_decel: 7000
max_z_velocity: 2.5
max_z_accel: 100
square_corner_velocity: 5.0

[input_shaper]
shaper_freq_x: 31.39
shaper_freq_y: 32.26
shaper_type=zv


# Common EXP1 / EXP2 (display) pins
[board_pins]
aliases:
    # Common EXP1 header found on many "all-in-one" ramps clones
    EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
    EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0, EXP2_9=<GND>,
    EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PG0, EXP2_10=<RST>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi"
    # Note, some boards wire: EXP2_8=<RST>, EXP2_10=PG0

# See the sample-lcd.cfg file for definitions of common LCD displays.

######################################################################
# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
######################################################################

[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
kill_pin: ^!EXP2_8

[output_pin beeper]
pin: EXP1_1

[gcode_macro START_PRINT]
gcode:
    M106 S0
    M220 S100
    M221 S100
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # reset extruder
    G92 E0
    # intro line
    G1 X175 E15 F1500
    G1 Y2.3 F5000
    G1 X10 E30 F1200
    # reset extruder
    G92 E0

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    # relative positioning
    G91
    G1 X-20 Y-20 Z5 E-3 F500
    # Raise nozzle by 10mm
    G1 Z10 F5000
    # Use absolute coordinates
    G90
    # disable steppers
    M84

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode: {action_call_remote_method("timelapse_newframe")}

[gcode_macro TIMELAPSE_RENDER]
gcode: {action_call_remote_method("timelapse_render")}

# This is to capture the unknown m201 command that cura adds.
[gcode_macro m201]
gcode:

# This is to capture the unknown m203 command that cura adds.
[gcode_macro m203]
gcode:

# This is to capture the unknown m205 command that cura adds.
[gcode_macro m205]
gcode:

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.223
#*# pid_ki = 1.264
#*# pid_kd = 841.382
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.150000, 0.150000, 0.150000, 0.150000, 0.150000
#*# 	  0.150000, 0.150000, 0.150000, 0.150000, 0.150000
#*# 	  0.150000, 0.150000, 0.150000, 0.150000, 0.150000
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
